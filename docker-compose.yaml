version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: reservation_app:latest
    container_name: reservation_app
    restart: unless-stopped
    env_file: .env
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=reservation_db
      - DB_USER=reservation_user
      - DB_PASS=R3serv@tionApp!
      - MONGO_URL=mongodb://mongo:27017/reservation_mongo
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
      mongo:
        condition: service_healthy
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    
    command: sh -c './setup.sh'
    
   

  mysql:
    image: mysql:8.0
    container_name: reservation_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: some_secure_root_password
      MYSQL_USER: reservation_user
      MYSQL_PASSWORD: R3serv@tionApp!
      MYSQL_DATABASE: reservation_db
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

    mysql_test:
    image: mysql:8.0
    container_name: reservation_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: some_secure_root_password
      MYSQL_USER: reservation_user
      MYSQL_PASSWORD: R3serv@tionApp!
      MYSQL_DATABASE: reservation_db_test
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      

  mongo:
    image: mongo:6.0
    container_name: reservation_mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      
    mongo_test:
    image: mongo:6.0
    container_name: reservation_mongo_test
    restart: unless-stopped
    ports:
      - "27018:27017" 
    volumes:
      - mongo_test_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: reservation_mongo_test
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5  

volumes:
  mysql_data:
  mongo_data:
